; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "XBMCLauncher"
#define MyAppVersion "4.1"
#define MyAppPublisher "baijuxavior@gmail.com"
#define MyAppExeName "XBMCLauncher.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{E1A76814-D7B5-4B33-9E25-516D34F016DB}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
VersionInfoProductVersion=4.1
VersionInfoVersion=4.1
AppPublisher={#MyAppPublisher}
AppMutex=xbmc_launcher_mutex
DefaultDirName={pf32}\XBMCLauncher
DefaultGroupName=XBMCLauncher
OutputBaseFilename=XBMCLauncher V4.1
Compression=lzma
SolidCompression=yes
OutputDir=.
WizardImageBackColor=clRed
DisableProgramGroupPage=true
Uninstallable=yes
UninstallFilesDir={app}
WizardImageFile=.\Installer Script Icons\WizModernImage-IS.bmp
WizardSmallImageFile=.\Installer Script Icons\WizModernSmallImage-IS.bmp
SetupIconFile=.\Installer Script Icons\Setup Icon.ico
ChangesAssociations=yes
CloseApplications=yes
[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Code] 

 // ------------------------------------------------------------- Look for already installed version  ---------------------------------------------------

function GetVersionInstalled( AppID: String ): String;   
var
   sPrevVersion: String;
begin
 
   if not RegQueryStringValue(HKLM,'Software\Microsoft\Windows\CurrentVersion\Uninstall\'+AppID+'_is1','DisplayVersion', sPrevVersion) then   //if not found in HKLM
   RegQueryStringValue(HKCU,'Software\Microsoft\Windows\CurrentVersion\Uninstall\'+AppID+'_is1' , 'DisplayVersion', sPrevVersion);        // look in HKCU
   Result := sPrevVersion;
end;


function GetUninstallString( AppID: String ): String; //Get uninstall.exe path of previous installation
var
   sUnInstallString: String;
begin
 
   if not RegQueryStringValue(HKLM,'Software\Microsoft\Windows\CurrentVersion\Uninstall\'+AppID+'_is1','UninstallString', sUnInstallString) then
   RegQueryStringValue(HKCU,'Software\Microsoft\Windows\CurrentVersion\Uninstall\'+AppID+'_is1' , 'UninstallString', sUnInstallString);
   Result := sUnInstallString;
end;

 function UnInstallOldVersion(): Integer;   
var
  sUnInstallString: String;
  iResultCode: Integer;
  sAppID: String;
begin
// Return Values:
// 1 - uninstall string is empty
// 2 - error executing the UnInstallString
// 3 - successfully executed the UnInstallString

  // default return value
  Result := 0;

  // get the uninstall string of the old app
   sAppID := '{E1A76814-D7B5-4B33-9E25-516D34F016DB}';
  sUnInstallString := GetUninstallString(sAppID);
  if sUnInstallString <> '' then begin
    sUnInstallString := RemoveQuotes(sUnInstallString);
    if Exec(sUnInstallString,'/SILENT' ,'', SW_SHOW, ewWaitUntilTerminated, iResultCode) then
      Result := 3
    else
      Result := 2;
  end else
    Result := 1;
end;


function ImportSettingsFromPreviousInstallation(sPrevVersion : String): Boolean;
var
  sFileName: String;
      begin
   
   if ( sPrevVersion = '3.5' ) then 
    if MsgBox ('Do you want to keep settings from previous installation?', mbInformation, MB_yesno) = idyes then
      begin  
   RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'FocusDelay', GetIniString('Settings', 'Delay', '10000', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));
   RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'FocusOnce', GetIniString('Settings', 'FocusOnce', '0', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));
   RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'DisableFocusPermanently', GetIniString('Settings', 'DisableFocusPermanently', '0', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));
   RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'CloseXBMCatSleep', GetIniString('Settings', 'ForceClose', '0', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));

   RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'StartExplorer', GetIniString('Settings', 'StartExplorer', '1', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));
   RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'StartMetroUI', GetIniString('Settings', 'StartMetroUI', '1', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));
   RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'StartupDelay', GetIniString('Settings', 'StartupDelay', '0', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));

   RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'StartXBMCatWinLogon', GetIniString('Settings', 'StartAtWinLogon', '1', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));
   RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'StartXBMCatWinResume', GetIniString('Settings', 'StartAtWinResume', '0', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));
   RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'StartXBMCPortable', GetIniString('Settings', 'StartPortable', '0', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));


   sFileName := GetIniString('Settings', 'XBMC_Path', ExpandConstant('{pf32}\XBMC\XBMC.exe'), ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini'));
   if FileExists (sFileName) then
      RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'XBMC_Path', sFileName);

   sFileName := GetIniString('Settings', 'iMON_Path', ExpandConstant('{pf32}\SoundGraph\iMON\iMON.exe'), ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini'));
   if FileExists (sFileName) then
      RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'iMON_Path', sFileName);

   sFileName := GetIniString('Settings', 'ExternalPlayer_Path', '', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini'));
   if FileExists (sFileName) then
      RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'ExternalPlayer_Path', sFileName);

   sFileName := GetIniString('Settings', 'XBMConiMON_Path', '', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini'));
   if FileExists (sFileName) then
      RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'XBMConiMON_Path', sFileName);

   //RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'XBMC_Path', GetIniString('Settings', 'XBMC_Path', ExpandConstant('{pf32}\XBMC\XBMC.exe'), ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));
   //RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'XBMConiMON_Path', GetIniString('Settings', 'XBMConiMON_Path', ExpandConstant('{pf32}\xbmc-on-imon-v0.1.9.5\xbmconimon.exe'), ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));
   //RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'iMON_Path', GetIniString('Settings', 'iMON_Path', ExpandConstant('{pf32}\SoundGraph\iMON\iMON.exe'), ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));
   //RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'ExternalPlayer_Path', GetIniString('Settings', 'ExternalPlayer_Path', ExpandConstant('{pf32}\ArcSoft\TotalMedia Theatre 5\uMCEPlayer5.exe'), ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));


   RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'App1_Path', GetIniString('Settings', 'App1_Path', '', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));
   RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'App2_Path', GetIniString('Settings', 'App2_Path', '', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));
   RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'App3_Path', GetIniString('Settings', 'App3_Path', '', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));
   RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'App4_Path', GetIniString('Settings', 'App4_Path', '', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));
   RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'App5_Path', GetIniString('Settings', 'App5_Path', '', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));
   RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'App6_Path', GetIniString('Settings', 'App6_Path', '', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));

   RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'StartApps1', GetIniString('Settings', 'StartApps', '0', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));
   RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'StartApps2', GetIniString('Settings', 'StartApps2', '0', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));
   RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'PreventFocusApps1', GetIniString('Settings', 'PreventFocusApps', '0', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));
   RegWriteStringValue(HKCU, 'Software\XBMCLauncher', 'PreventFocusApps2', GetIniString('Settings', 'PreventFocusApps2', '0', ExpandConstant('{userappdata}\XBMCLauncher\Settings.ini')));
end;
end;

function InitializeSetup(): Boolean;
var
 sAppID: String;
 sPrevVersion: String;

 begin
  sAppID := '{E1A76814-D7B5-4B33-9E25-516D34F016DB}';
  sPrevVersion := GetVersionInstalled( sAppID );
  
  if ( sPrevVersion <> '' ) and ( sPrevVersion < '4.0' ) then
                                                                                                   
       if MsgBox ('An older version XBMCLauncher V' + sPrevVersion + ' is already installed. Press Yes to uninstall it or No to exit the setup.' , mbInformation, MB_yesno) = idno then
       Result:= false
       else
          begin 
            ImportSettingsFromPreviousInstallation(sPrevVersion);
            if UnInstallOldVersion() = 3 then
              Result:= true
          end;
            
  if ( sPrevVersion = '4.1' ) then
    if MsgBox ('XBMCLauncher V4.1 is already installed. Do you want to install it again?', mbInformation, MB_yesno) = idyes then
        Result:= true

  if ( sPrevVersion > '4.1' ) then
        if MsgBox ('A higher version XBMCLauncher V' + sPrevVersion + ' is already installed. Press Yes to uninstall it or No to exit the setup.', mbInformation, MB_yesno) = idno then
        Result:= false
       else
          begin 
            ImportSettingsFromPreviousInstallation(sPrevVersion);
            if UnInstallOldVersion() = 3 then
              Result:= true
          end;

  if ( sPrevVersion = '4.0' ) then
    Result := true;

  if ( sPrevVersion = '' ) then
    Result := true;
 end;


 // ------------------------------------------------------------- Take mce remote regisrty backup before installation  ---------------------------------------------------

procedure CurStepChanged(CurStep: TSetupStep);   

var
  ReportMappingTableKey: string;
  ReportMappingTableKey_Backup: string;
begin
if (CurStep = ssInstall) and IsComponentSelected('OptionMCERegistry') then
  begin
    if RegQueryBinaryValue(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\services\HidIr\Remotes\745a17a0-74d3-11d0-b6fe-00a0c90f57da', 'ReportMappingTable', ReportMappingTableKey) then     {if ReportMappingTable exists   }
       if RegQueryBinaryValue(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\services\HidIr\Remotes\745a17a0-74d3-11d0-b6fe-00a0c90f57da', 'ReportMappingTable_Backup', ReportMappingTableKey_Backup) = false then    {if ReportMappingTable_Backup not exists   }
          RegWriteBinaryValue(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\services\HidIr\Remotes\745a17a0-74d3-11d0-b6fe-00a0c90f57da', 'ReportMappingTable_Backup', ReportMappingTableKey); {Take backup}
          
 end;
 end;



 // ------------------------------------------------------------- Restore changed files and mce remote registry on uninstall ---------------------------------------------------

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
var
  OldFile: string;
  BackupKey: string;

begin
  case CurUninstallStep of    
    usPostUninstall:
      begin
      RegWriteStringValue(HKEY_CURRENT_USER, 'Software\Microsoft\Windows NT\CurrentVersion\Winlogon', 'Shell', 'Explorer.exe');

      if RegQueryBinaryValue(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\services\HidIr\Remotes\745a17a0-74d3-11d0-b6fe-00a0c90f57da', 'ReportMappingTable_Backup', BackupKey) then
       begin
        RegWriteBinaryValue(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\services\HidIr\Remotes\745a17a0-74d3-11d0-b6fe-00a0c90f57da', 'ReportMappingTable', BackupKey);
        RegDeleteValue(HKEY_LOCAL_MACHINE, 'SYSTEM\CurrentControlSet\services\HidIr\Remotes\745a17a0-74d3-11d0-b6fe-00a0c90f57da', 'ReportMappingTable_Backup')
       end;

      OldFile := ExpandConstant('{userappdata}') + '\XBMC\userdata\advancedsettings.xml.backup'
      if FileExists(OldFile) then RenameFile(OldFile, ExpandConstant('{userappdata}') + '\XBMC\userdata\advancedsettings.xml') ;

      OldFile := ExpandConstant('{userappdata}') + '\XBMC\userdata\keymaps\keyboard.xml.backup'
      if FileExists(OldFile) then RenameFile(OldFile, ExpandConstant('{userappdata}') + '\XBMC\userdata\keymaps\keyboard.xml');
      
      OldFile := ExpandConstant('{pf32}') + '\XBMC\addons\skin.confluence\720p\DialogButtonMenu.xml.backup'
      if FileExists(OldFile) then RenameFile(OldFile, ExpandConstant('{pf32}') + '\XBMC\addons\skin.confluence\720p\DialogButtonMenu.xml');

      end;
end;
end;
 
 
[Components]
Name: "OptionMainApps"; Description: "XBMCLauncher";   Types: full compact custom ; Flags: fixed
Name: "OptionShell"; Description: "Set XBMCLauncher as Windows Shell";   Types: custom 
Name: "OptionAdvancedSettings"; Description: "XBMC Advanced Settings File";  Types: custom
Name: "OptionShutdownMenu"; Description: "Custom XBMC Shutdown Menu (For Confluence Skin only)";   Types: custom
Name: "OptionCustomKeymap"; Description: "Custom XBMC Keymap File";  Types: custom
Name: "OptionMCERegistry"; Description: "MCE Remote Control Registry keys";  Types: custom
Name: "Option\OriginalMCE"; Description: "Original MCE Remote Control Registry keys";   Types: custom; Flags: exclusive
Name: "Option\CustomMCE"; Description: "Custom MCE Remote Control Registry keys";   Types: custom ; Flags: exclusive
Name: "OptionMetroStart"; Description: "Add Power Button icons to Metro Start";   Types: custom  ; MinVersion: 6.2
Name: "OptionDesktopPowerButtons"; Description: "Add Power Button icons to Desktop";   Types: custom  ; MinVersion: 6.2
Name: "OptionPowerContextMenu"; Description: "Add Power Options to Desktop Context Menu";   Types: custom  ; MinVersion: 6.1

[Dirs]
Name: {userappdata}\XBMCLauncher

[Files]
Source: "{pf32}\XBMC\addons\skin.confluence\720p\DialogButtonMenu.xml"; DestDir: "{pf32}\XBMC\addons\skin.confluence\720p"; DestName: "DialogButtonMenu.xml.backup"; Flags: external skipifsourcedoesntexist onlyifdoesntexist uninsneveruninstall; Components: OptionShutdownMenu
Source: "{userappdata}\XBMC\userdata\advancedsettings.xml"; DestDir: "{userappdata}\XBMC\userdata"; DestName: "advancedsettings.xml.backup"; Flags: external skipifsourcedoesntexist onlyifdoesntexist uninsneveruninstall; Components: OptionAdvancedSettings 
Source: "{userappdata}\XBMC\userdata\keymaps\keyboard.xml"; DestDir: "{userappdata}\XBMC\userdata\keymaps"; DestName: "keyboard.xml.backup"; Flags: external skipifsourcedoesntexist onlyifdoesntexist uninsneveruninstall; Components: OptionCustomKeymap

Source: "Script Files\XBMCLauncher.exe"; DestDir: {app}; Flags: ignoreversion     ; Components: OptionMainApps
Source: "Script Files\XBMCLauncher.ico"; DestDir: {app}; Flags: ignoreversion     ; Components: OptionMainApps

Source: "XBMCLauncherGUI\XBMCLauncherGUI\bin\Release\XBMCLauncherGUI.exe"; DestDir: {app}; Flags: ignoreversion     ; Components: OptionMainApps
;Source: "XBMCLauncherGUI.NET2.0\XBMCLauncherGUI\bin\Release\XBMCLauncherGUI.exe"; DestDir: {app}; Flags: ignoreversion     ; Components: OptionMainApps ; OnlyBelowVersion: 6.2
;Source: "XBMCLauncherGUI.NET4.0\XBMCLauncherGUI\bin\Release\XBMCLauncherGUI.exe"; DestDir: {app}; Flags: ignoreversion     ; Components: OptionMainApps ; MinVersion: 6.2
 
Source: "Script Files\advancedsettings.xml"; DestDir: "{userappdata}\XBMC\userdata"; Flags: ignoreversion; Components: OptionAdvancedSettings

Source: "Script Files\keyboard.xml"; DestDir: "{userappdata}\XBMC\userdata\keymaps"; Flags: ignoreversion ; Components: OptionCustomKeymap

Source: "Script Files\ConfluenceShutdownButtonAction.exe"; DestDir: "{pf32}\XBMC"; Flags: ignoreversion   ; Components: OptionShutdownMenu
Source: "Script Files\ConfluenceShutdownButtonAction.py"; DestDir: "{pf32}\XBMC"; Flags: ignoreversion   ; Components: OptionShutdownMenu
Source: "Script Files\CloseXBMC.exe"; DestDir: "{pf32}\XBMC"; Flags: ignoreversion   ; Components: OptionShutdownMenu
Source: "Script Files\CloseXBMC.py"; DestDir: "{pf32}\XBMC"; Flags: ignoreversion   ; Components: OptionShutdownMenu
Source: "Script Files\RestartXBMC.exe"; DestDir: "{pf32}\XBMC"; Flags: ignoreversion   ; Components: OptionShutdownMenu
Source: "Script Files\RestartXBMC.py"; DestDir: "{pf32}\XBMC"; Flags: ignoreversion   ; Components: OptionShutdownMenu
Source: "Script Files\DialogButtonMenu.xml"; DestDir: "{pf32}\XBMC\addons\skin.confluence\720p"; Flags: ignoreversion ; Components: OptionShutdownMenu

Source: "Script Files\ConfluenceShutdownButtonAction.exe"; DestDir: {app}; Flags: ignoreversion   ; Components: OptionShutdownMenu
Source: "Script Files\ConfluenceShutdownButtonAction.py"; DestDir: {app}; Flags: ignoreversion   ; Components: OptionShutdownMenu
Source: "Script Files\CloseXBMC.exe"; DestDir: {app}; Flags: ignoreversion   ; Components: OptionShutdownMenu
Source: "Script Files\CloseXBMC.py"; DestDir: {app}; Flags: ignoreversion   ; Components: OptionShutdownMenu
Source: "Script Files\RestartXBMC.exe"; DestDir: {app}; Flags: ignoreversion   ; Components: OptionShutdownMenu
Source: "Script Files\RestartXBMC.py"; DestDir: {app}; Flags: ignoreversion   ; Components: OptionShutdownMenu
Source: "Script Files\DialogButtonMenu.xml"; DestDir: {app}; Flags: ignoreversion  ; Components: OptionShutdownMenu
 
Source: "Script Files\Windows8-HybridShutdown.exe"; DestDir: {app}; Flags: ignoreversion ;  Components: OptionMetroStart  OptionDesktopPowerButtons
Source: "Script Files\Windows8-Restart.exe"; DestDir: {app}; Flags: ignoreversion ;  Components: OptionMetroStart  OptionDesktopPowerButtons
Source: "Script Files\Windows8-Sleep.exe"; DestDir: {app}; Flags: ignoreversion ;  Components: OptionMetroStart  OptionDesktopPowerButtons

Source: "Script Files\Windows8-HybridShutdown.ico"; DestDir: {app}; Flags: ignoreversion ;  Components: OptionMetroStart  OptionDesktopPowerButtons
Source: "Script Files\Windows8-Restart.ico"; DestDir: {app}; Flags: ignoreversion ;  Components: OptionMetroStart  OptionDesktopPowerButtons
Source: "Script Files\Windows8-Sleep.ico"; DestDir: {app}; Flags: ignoreversion ;  Components: OptionMetroStart    OptionDesktopPowerButtons
    
Source: "Script Files\CustomMCERegistry.reg"; DestDir: {userappdata}\XBMCLauncher; Flags: ignoreversion ; Components: OptionMCERegistry
Source: "Script Files\OriginalMCERegistry.reg"; DestDir: {userappdata}\XBMCLauncher; Flags: ignoreversion ; Components: OptionMCERegistry
Source: "Script Files\PinToTaskbar.exe"; DestDir: {app}\; Flags: ignoreversion ; MinVersion: 6.1

[Registry]
Root: HKCU; Subkey: Software\Microsoft\Windows NT\CurrentVersion\Winlogon; ValueType: string; ValueName: Shell; ValueData: {app}\XBMCLauncher.exe; Flags: noerror; Components: OptionShell
Root: HKCU; Subkey: Software\XBMCLauncher; Flags: uninsdeletekey;
Root: HKCU; Subkey: Software\XBMCLauncher; ValueType: string; ValueName: XBMC_Path; ValueData: {pf32}\XBMC\XBMC.exe; Flags: noerror createvalueifdoesntexist;
Root: HKCU; Subkey: Software\XBMCLauncher; ValueType: string; ValueName: iMON_Path; ValueData: {pf32}\SoundGraph\iMON\iMON.exe; Flags: noerror createvalueifdoesntexist;

Root: HKCU; Subkey: Software\XBMCLauncher; ValueType: string; ValueName: ShowCustomShutdownMenu; ValueData: 1; Flags: noerror; Components: OptionShutdownMenu
Root: HKCU; Subkey: Software\XBMCLauncher; ValueType: string; ValueName: ShutdownAction; ValueData: u; Flags: noerror; Components: OptionShutdownMenu

Root: HKCR; Subkey: DesktopBackground\Shell\Power; ValueType: string; ValueName: MUIVerb; ValueData: Power; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu
Root: HKCR; Subkey: DesktopBackground\Shell\Power; ValueType: string; ValueName: SubCommands; ValueData: "Lock;SwitchUser;LogOff;Sleep;Hibernate;HybridShutdown;ShutDown;Restart"; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu; MinVersion: 6.2
Root: HKCR; Subkey: DesktopBackground\Shell\Power; ValueType: string; ValueName: SubCommands; ValueData: "Lock;SwitchUser;LogOff;Sleep;Hibernate;ShutDown;Restart"; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu; OnlyBelowVersion: 6.2
Root: HKCR; Subkey: DesktopBackground\Shell\Power; ValueType: string; ValueName: icon; ValueData: shell32.dll,-221; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu
Root: HKCR; Subkey: DesktopBackground\Shell\Power; ValueType: string; ValueName: Position; ValueData: bottom; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu

Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\Lock; ValueType: string; ValueName: ; ValueData: Lock; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\Lock; ValueType: string; ValueName: icon; ValueData: shell32.dll,-48; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\Lock\command; ValueType: string; ValueName: ; ValueData: "rundll32.exe user32.dll, LockWorkStation"; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu

Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\SwitchUser; ValueType: string; ValueName: ; ValueData: Switch User; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\SwitchUser; ValueType: string; ValueName: icon; ValueData: imageres.dll,-88; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\SwitchUser\command; ValueType: string; ValueName: ; ValueData: tsdiscon.exe; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu

Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\LogOff; ValueType: string; ValueName: ; ValueData: Log Off; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\LogOff; ValueType: string; ValueName: icon; ValueData: shell32.dll,-45; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\LogOff\command; ValueType: string; ValueName: ; ValueData: shutdown.exe -l; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu

Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\ShutDown; ValueType: string; ValueName: ; ValueData: Shutdown; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu ; OnlyBelowVersion: 6.2
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\ShutDown; ValueType: string; ValueName: ; ValueData: Full Shutdown; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu ; MinVersion: 6.2
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\ShutDown; ValueType: string; ValueName: icon; ValueData: shell32.dll,-28; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\ShutDown\command; ValueType: string; ValueName: ; ValueData: shutdown.exe -s -t 00; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu

Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\HybridShutdown; ValueType: string; ValueName: ; ValueData: Hybrid Shutdown; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu ; MinVersion: 6.2
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\HybridShutdown; ValueType: string; ValueName: icon; ValueData: shell32.dll,-28; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu  ; MinVersion: 6.2
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\HybridShutdown\command; ValueType: string; ValueName: ; ValueData: Shutdown -s -hybrid -t 00; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu   ; MinVersion: 6.2

Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\Restart; ValueType: string; ValueName: ; ValueData: Restart; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\Restart; ValueType: string; ValueName: icon; ValueData: shell32.dll,-290; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\Restart\command; ValueType: string; ValueName: ; ValueData: shutdown.exe -r -t 00; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu

Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\Sleep; ValueType: string; ValueName: ; ValueData: Sleep; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\Sleep; ValueType: string; ValueName: icon; ValueData: powercpl.dll,-514; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\Sleep\command; ValueType: string; ValueName: ; ValueData: "rundll32.exe powrprof.dll,SetSuspendState Sleep"; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu

Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\Hibernate; ValueType: string; ValueName: ; ValueData: Hibernate; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\Hibernate; ValueType: string; ValueName: icon; ValueData: imageres.dll,-101; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu
Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\Hibernate\command; ValueType: string; ValueName: ; ValueData: Shutdown.exe -h; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu


Root: HKLM; Subkey: SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\CommandStore\shell\Hibernate\command; ValueType: string; ValueName: ; ValueData: Shutdown.exe -h; Flags: noerror uninsdeletekey; Components: OptionPowerContextMenu


[Icons] 
Name: "{userstartup}\XBMCLauncher"; Filename: {app}\XBMCLauncher.exe
Name: {group}\XBMCLauncher; Filename: {app}\XBMCLauncher.exe ;HotKey: "ctrl+alt+F10"
Name: {group}\XBMCLauncherGUI; Filename: {app}\XBMCLauncherGUI.exe
Name: {commondesktop}\XBMCLauncher GUI; Filename: {app}\XBMCLauncherGUI.exe; Tasks: desktopicon; Comment: "GUI for XBMCLauncher Settings"
Name: {group}\Shutdown; Filename: {app}\Windows8-HybridShutdown.exe ; IconFilename: {app}\Windows8-HybridShutdown.ico ; Components: OptionMetroStart
Name: {group}\Restart; Filename: {app}\Windows8-Restart.exe ; IconFilename: {app}\Windows8-Restart.ico ;  Components: OptionMetroStart
Name: {group}\Sleep; Filename: {app}\Windows8-Sleep.exe ; IconFilename: {app}\Windows8-Sleep.ico ; Components: OptionMetroStart
Name: {commondesktop}\Shutdown; Filename: {app}\Windows8-HybridShutdown.exe ; IconFilename: {app}\Windows8-HybridShutdown.ico ; Components: OptionDesktopPowerButtons
Name: {commondesktop}\Restart; Filename: {app}\Windows8-Restart.exe ; IconFilename: {app}\Windows8-Restart.ico ;  Components: OptionDesktopPowerButtons
Name: {commondesktop}\Sleep; Filename: {app}\Windows8-Sleep.exe ; IconFilename: {app}\Windows8-Sleep.ico ; Components: OptionDesktopPowerButtons
Name: {group}\{cm:UninstallProgram,XBMCLauncher}; Filename: {uninstallexe}

[Tasks]
Name: desktopicon; Description: Add XBMCLauncherGUI shortcut to Desktop; GroupDescription: {cm:AdditionalIcons}
Name: pintotaskbar; Description: Add XBMCLauncherGUI shortcut to Taskbar [Pin to Taskbar] ; GroupDescription: {cm:AdditionalIcons}; MinVersion: 6.1

[Run]

Filename: {win}\regedit.exe; Description: Install Custom MCE Registry; Parameters: /s {userappdata}\XBMCLauncher\CustomMCERegistry.reg; Flags: runhidden nowait; Components:Option\CustomMCE 
Filename: {win}\regedit.exe; Description: Install Original MCE Registry; Parameters: /s {userappdata}\XBMCLauncher\OriginalMCERegistry.reg; Flags: runhidden nowait; Components:Option\OriginalMCE 
Filename: {app}\PinToTaskbar.exe; Tasks: Pintotaskbar
Filename: {app}\XBMCLauncherGUI.exe; Description: Run XBMCLauncherGUI; Flags: nowait postinstall skipifsilent; WorkingDir: {app}  
Filename: {app}\XBMCLauncher.exe; Description: Run XBMCLauncher; Flags: nowait postinstall; WorkingDir: {app}

[UninstallDelete]
Name: {userappdata}\XBMCLauncher; Type: dirifempty
Name: {app};  Type: dirifempty